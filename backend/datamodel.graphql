# Any time you update this file it needs to be deployed to Prisma. `npm run deploy`
# Deploying generates `prisma.graphql`, based on the schema (is this file) that we provide in this file,
# which contains all of the relationships, types, queries, for the underlying CRUD operations.
# GraphQL doesn't provide this out of the box like filtering and fuzzy matching etc
# Post deploy hook in `prisma.yml` file pulls the new deployed (prisma.graphql) file back down

enum Permission { # Enum is a way of specifying possible values on a type
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERSMISSIONUPDATE
}

type User {
  id: ID! @id @unique
  name: String!
  email: String! @unique # Prevent people signing up for multiple accounts with same email
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]! @scalarList(strategy: RELATION)
}

type Item {
  id: ID! @id
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
  createdAt: DateTime! @createdAt #DateTime not standard to Graphql but exposed via Prisma
  updatedAt: DateTime! @updatedAt
  user: User!
}
